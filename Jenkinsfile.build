pipeline {
        agent { node { label 'dockerslave' } }    
        environment {
        APP_NAME = "${env.JOB_NAME}"
        BUILD_DATE = sh (returnStdout: true, script: "date -u +'%Y-%m-%dT%H:%M:%SZ'").trim()
        MAVEN_OPTIONS = '-DskipTests=true'
        REGISTRY_URL = "https://${DTR_REGISTRY}"
        SHORTREV = ''
        TAG = ''
        VERSION = ''
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    SHORTREV = sh (returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                }
                sh 'ls -ltra'
                println "SHORTREV: ${SHORTREV}"
            }
        }

        stage('Build Docker Image') {
            steps {
                    sh 'env'
                    sh 'pwd && ls -ltra'
                    sh 'sudo docker build --no-cache=true --build-arg BUILD_DATE=${BUILD_DATE} --build-arg VCS_REF=${SHORTREV} --build-arg BUILD_VERSION=${VERSION} -t ${APP_NAME}:${TAG} .'
                }
            }
        

        stage('Test Docker Image') {
            steps {
                sh """
                    sudo docker run ${APP_NAME}:${TAG}
                """
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'ci-pipeline', passwordVariable: 'REGISTRY_PASS', usernameVariable: 'REGISTRY_USER')]) {
                    sh """
                        sudo docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASS} ${REGISTRY_URL}
                        sudo docker image tag ${APP_NAME}:${TAG} ${DTR_REGISTRY}/docker-cemea/${APP_NAME}:${TAG}
                        sudo docker image push ${DTR_REGISTRY}/${REGISTRY_USER}/${APP_NAME}:${TAG}
                        sudo docker image rm ${DTR_REGISTRY}/${REGISTRY_USER}/${APP_NAME}:${TAG}
                    """
                }
            }
        }
    }
}