import groovy.json.JsonSlurperClassic
def payload = new groovy.json.JsonSlurperClassic().parseText(requestPayload)

pipeline {
    agent { node { label 'dockerslave' } }
    environment {
        DOCKER_OPTS = "--config /var/jenkins_config/.docker"
        REGISTRY_URL = "https://${DTR_REGISTRY}"
        SOURCE_NAMESPACE = "${payload.contents.namespace}"
        SOURCE_IMAGE = "${payload.contents.repository}"
        SOURCE_TAG = "${payload.contents.tag}"
        }

    stages {
        stage('Pull Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'ci-pipeline', passwordVariable: 'REGISTRY_PASS', usernameVariable: 'REGISTRY_USER')]) {
                    sh """
                        docker version
                        docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASS} ${REGISTRY_URL}
                        docker image pull ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}
                        docker image tag ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG} ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}-signed
                        docker image push ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}-signed
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                def summaryString = """\
                Promotion Summary:
                    Source Image Name: ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}
                    Target Image Name: ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}-signed
                    Location: ${payload.location}""".stripIndent()
                currentBuild.displayName = "#${env.BUILD_NUMBER} - Triggered by PROMOTION webhook for ${DTR_REGISTRY}/${SOURCE_NAMESPACE}/${SOURCE_IMAGE}:${SOURCE_TAG}"
                currentBuild.description = summaryString
            }
        }
    }
}
